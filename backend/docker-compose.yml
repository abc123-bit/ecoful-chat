version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15
    container_name: kb_postgres
    environment:
      POSTGRES_DB: knowledge_base
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kb_network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: kb_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kb_network

  # MinIO对象存储
  minio:
    image: minio/minio:latest
    container_name: kb_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      # MINIO_PUBLIC_ENDPOINT: http://localhost:9000   
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - kb_network

  # Chroma向量数据库
  chroma:
    image: chromadb/chroma:0.5.23
    container_name: kb_chroma
    ports:
      - "8001:8000"
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    networks:
      - kb_network


  # FastAPI应用 (开发模式)
  api:
    build: .
    container_name: kb_api
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/knowledge_base
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - MINIO_PUBLIC_ENDPOINT=http://localhost:9000
      - MINIO_SECURE=false
      - CHROMA_HOST=chroma
      - CHROMA_PORT=8000
      - DEBUG=true
    ports:
      - "8080:8000"
    depends_on:
      - postgres
      - redis
      - minio
      - chroma
    volumes:
      - .:/app
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - kb_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
  redis_data:
  minio_data:
  chroma_data:

networks:
  kb_network:
    driver: bridge